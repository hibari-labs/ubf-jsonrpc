%%% -*- mode: erlang -*-

+NAME("test").

+VSN("ubf2.0").


%%%%%%
+TYPES

authinfo()              :: term();
now()                   :: {integer(), integer(), integer()};

now_req()               :: {now, authinfo(), timeout()};
now_res()               :: {ok, now()};

client_breaks_req01()   :: {client_breaks_req01, authinfo(), timeout()};
client_breaks_res01()   :: client_breaks_res01;
client_timeout_req03()  :: {client_timeout_req03, authinfo(), timeout()};
client_timeout_res03()  :: client_timeout_res03;

server_breaks_req01()   :: {server_breaks_req01, authinfo(), timeout()};
server_breaks_res01()   :: server_breaks_res01;
server_timeout_req03()  :: {server_timeout_req03, authinfo(), timeout()};
server_timeout_res03()  :: server_timeout_res03;
server_crash_req05()    :: {server_crash_req05, authinfo(), timeout()};
server_crash_res05()    :: server_crash_res05;


%%%%%
%%% keepalive
ubf_keepalive_req()     :: keepalive;
ubf_keepalive_res()     :: ok;


%%%%%
%%% meta methods
ubf_info_req()          :: info;
ubf_info_res()          :: ubfstring();

ubf_description_req()   :: description;
ubf_description_res()   :: ubfstring();

ubf_contract_req()      :: contract;
ubf_contract_res()      :: term().


%%%%%
%%% anystate
+ANYSTATE

now_req()              => now_res();

client_breaks_req01()  => client_breaks_res01();
client_timeout_req03() => client_timeout_res03();

server_breaks_req01()  => server_breaks_res01();
server_timeout_req03() => server_timeout_res03();
server_crash_req05()   => server_crash_res05();

%% keepalive
ubf_keepalive_req()    => ubf_keepalive_res();

%% meta methods
ubf_info_req()         => ubf_info_res();
ubf_description_req()  => ubf_description_res();
ubf_contract_req()     => ubf_contract_res().
